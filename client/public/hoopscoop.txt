$35 Fantasy Baller: 
- Assigned every player from chosen season (current season is default) a dollar value, $1, $2, $3, $4, $5, $6 or $7, seven being the most valuable players. Used the total of the season averages of pts, reb, and ast to determine dollar amount, and created 7 dropdown menus containing all players in the NBA organized by dollar amount assigned. 
- User, with stat tables at bottom of screen for reference, selects 10 players for his or her team, while not going over the $35 salary cap limit. User roster is displayed dynamically as a drag and drop component, top 5 rows are starters, bottom 5 rows are bench players. 
- Once the user has finished drafting a 10-man roster and the 'Lock in Roster' button is clicked, the computer takes its turn. An array of 10 random integers, each within the range of 1 to 7, and adding up to exactly 35 is created. The integers in the array represent random dollar amounts for players. For each integer in the array, a random player is selected from the corresponding player drop down menu; if the integer is 2, then a random player will be chosen from the $2 player dropdown set, etc. Top 5-dollar value players are set as starters.  
- Once the "Lock in Roster" button is hit, the computer drafts its players, and the game is simulated using a multitude of stats (mostly efficiency or per-minute based). The stats are split into four video-game-like categories and displayed to the user to inform them of the strengths and weaknesses of his or her roster.  
- Make sure to add your score to the ‘$35 Ballers’ high score list!

Shot Charts: 
- User selects any player on any team in the given 8 seasons from the drop-down menus, and season/game shot charts are displayed. Once the player is selected, the ‘games’ drop-down menu is activated, and the user has the option to view a shot chart from any specific game the player played in. Made shots are green, missed shots are red. 
 
Cumulative Stats: 
CARMELO FACTOR: Player's hustle stats per minute * 100 + efg% - 100 
MVP POINTS: sum of custom weights of player's traditional stats
let mvpPoints = (.15 * parseFloat(ppg)) + (.07 * parseFloat(totReb)) + (.06 * parseFloat(assists)) + (.125 * parseFloat(steals)) - (.125 * parseFloat(turnovers)) + (.3 * parseFloat(plusMinus)) + (.02 * parseFloat(fgp));  
let hustleFactor = (.25 * parseFloat(offRebPg)) + (.35 * parseFloat(stl)) + (.2 * parseFloat(blk)) + (.2 * parseFloat(plusMinus))  
let carmeloFactor = -1 * (.3 * (100 - parseFloat(fgp))/10) + (.7 * hustleFactor); 
 
Predictions:
- Displays historical and future expected/actual results for every game in the last 8 seasons. Success rate in the 60's.
